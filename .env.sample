# .env.sample
# -----------------------------------------------------------------------------
# Sample Environment Variables for ComicGenerator Project
# -----------------------------------------------------------------------------
# 1. Copy this file to a new file named '.env' in the project root directory.
# 2. Fill in the required values, especially API keys and secrets.
# 3. Adjust optional parameters as needed.
# DO NOT COMMIT THE ACTUAL .env FILE TO VERSION CONTROL IF IT CONTAINS SECRETS.
# -----------------------------------------------------------------------------

# ======================================================================
# 필수 설정 (Essential Configuration)
# ======================================================================
# 아래 값들은 .env 파일 또는 환경 변수를 통해 설정해야 할 가능성이 높습니다.
# 주석에 명시된 조건 또는 특정 기능 활성화 시 필수적으로 필요합니다.

# --- LLM API ---
LLM_API_KEY=YOUR_LLM_API_KEY_HERE                 # 필수: LLM 서비스 인증 키 (예: OpenAI API Key)
# LLM_API_ENDPOINT=                               # 선택적: 자체 호스팅/특정 LLM 엔드포인트 사용 시 설정 (예: http://localhost:11434/v1)

# --- Image Generation API ---
# 이미지 생성 기능 사용 시 필요합니다. URL과 토큰은 사용하는 서비스에 따라 다릅니다.
IMAGE_SERVER_URL=YOUR_IMAGE_SERVER_URL_HERE        # 필수 (이미지 생성 시): 이미지 생성 서버 주소 (예: Stability AI, DALL-E API 등)
IMAGE_SERVER_API_TOKEN=YOUR_IMAGE_SERVER_API_TOKEN_HERE # 필수 (이미지 생성 시): 해당 서버 인증 토큰/키

# --- Translation API (Naver Papago) ---
# 번역 기능(TRANSLATION_ENABLED=true) 사용 시 Naver Cloud Platform 키가 필요합니다.
NAVER_CLIENT_ID=YOUR_NAVER_CLIENT_ID_HERE          # 필수 (번역 사용 시)
NAVER_CLIENT_SECRET=YOUR_NAVER_CLIENT_SECRET_HERE      # 필수 (번역 사용 시)

# --- Search / Trend Tool APIs ---
# 사용하는 각 검색/소셜 미디어 도구에 대한 API 키/자격 증명이 필요합니다.
GOOGLE_API_KEY=YOUR_GOOGLE_API_KEY_HERE            # 필수 (Google Search 사용 시): Google API Key (Custom Search API 활성화 필요)
GOOGLE_CSE_ID=YOUR_GOOGLE_CSE_ID_HERE             # 필수 (Google Search 사용 시): Google Custom Search Engine ID
TWITTER_BEARER_TOKEN=YOUR_TWITTER_BEARER_TOKEN_HERE # 필수 (Twitter 사용 시): Twitter API v2 Bearer Token
REDDIT_CLIENT_ID=YOUR_REDDIT_CLIENT_ID_HERE        # 필수 (Reddit 사용 시): Reddit App Client ID (스크립트 타입 앱 생성)
REDDIT_CLIENT_SECRET=YOUR_REDDIT_CLIENT_SECRET_HERE  # 필수 (Reddit 사용 시): Reddit App Client Secret
YOUTUBE_API_KEY=YOUR_YOUTUBE_API_KEY_HERE          # 필수 (Youtube 사용 시): YouTube Data API v3 Key
# REDDIT_USERNAME=                                # 선택적: Reddit 스크립트 인증 방식 사용 시 사용자 이름
# REDDIT_PASSWORD=                                # 선택적: Reddit 스크립트 인증 방식 사용 시 비밀번호 (보안 주의!)

# --- Redis Cache/DB ---
# 캐싱/데이터 저장에 Redis 사용 시 필요합니다. 운영 환경에서는 localhost 외 주소 설정 권장.
REDIS_HOST=localhost
# REDIS_PASSWORD=                                 # 선택적: Redis 비밀번호가 설정된 경우 입력

# --- LangSmith (Optional Observability) ---
# LangSmith 추적 기능을 사용하려면 설정하세요.
# LANGCHAIN_API_KEY=YOUR_LANGCHAIN_API_KEY_HERE     # 필수 (LangSmith 사용 시)
# LANGCHAIN_TRACING_V2=true                       # LangSmith 사용 시 필요 (별도 환경변수, LangChain 라이브러리가 직접 읽음)

# --- AWS S3 Storage ---
# 최종 결과물 S3 업로드 기능(UPLOAD_TO_S3=true) 사용 시 필요합니다.
# S3_BUCKET_NAME=your-s3-bucket-name              # 필수 (S3 업로드 사용 시)
# AWS_REGION=your-aws-region                      # 필수 (S3 업로드 사용 시, 예: ap-northeast-2)
# AWS_ACCESS_KEY_ID=                              # 선택적: IAM 역할/프로파일 대신 사용할 경우
# AWS_SECRET_ACCESS_KEY=                           # 선택적: IAM 역할/프로파일 대신 사용할 경우

# --- Web Scraping Proxy ---
# SCRAPER_USE_PROXY=true 설정 시 필요합니다.
# SCRAPER_PROXY_URL=http://user:password@proxy.example.com:port


# ======================================================================
# 코어 설정 및 기능 활성화 플래그 (Core Settings & Feature Flags)
# ======================================================================
PROJECT_NAME=ComicGenerator
DEBUG=False
TRANSLATION_ENABLED=false # 만화 텍스트 번역 기능 활성화 여부
UPLOAD_TO_S3=false      # 최종 결과물(만화 이미지 등) S3 업로드 여부

# --- 결과 저장 관련 플래그 ---
SAVE_AGENT_RESULTS=True  # 각 노드/에이전트 결과 저장 여부
SAVE_AGENT_INPUTS=False # 각 노드/에이전트 입력 저장 여부
SAVE_DEBUG_INFO=True   # 상세 디버깅 정보 저장 여부 (DEBUG=True 와 연동 고려)

# ======================================================================
# 튜닝 가능 파라미터 및 기타 설정 (Tunable Parameters & Other Settings)
# ======================================================================
# 대부분 기본값이 있으며, 필요에 따라 성능/동작/결과 품질 튜닝을 위해 수정 가능합니다.

# --- 일반 도구/API 기본값 ---
TOOL_RETRY_ATTEMPTS=3
TOOL_RETRY_WAIT_MIN=1  # 초
TOOL_RETRY_WAIT_MAX=10 # 초
TOOL_HTTP_TIMEOUT=15   # 초

# --- LLM 동작 튜닝 ---
LLM_API_TIMEOUT=60   # 초
LLM_API_RETRIES=3
DEFAULT_LLM_MODEL=gpt-4o-mini # 기본 LLM 모델 ID
# 작업별 LLM Temperature (0.0 ~ 1.0, 낮을수록 결정적, 높을수록 창의적)
LLM_TEMPERATURE_ANALYSIS=0.2
LLM_TEMPERATURE_EXTRACT=0.1
LLM_TEMPERATURE_SUMMARIZE=0.3
LLM_TEMPERATURE_QA_GEN=0.1
LLM_TEMPERATURE_QA_VERIFY=0.0
LLM_TEMPERATURE_STANCE=0.1
LLM_TEMPERATURE_SENTIMENT=0.1
LLM_TEMPERATURE_OPINION_SUMMARIZE=0.4
LLM_TEMPERATURE_SYNTHESIS=0.5
LLM_TEMPERATURE_CREATIVE=0.7 # 아이디어 생성 시
LLM_TEMPERATURE_SCENARIO=0.7 # 시나리오 생성 시 (기본: creative와 동일)
LLM_TEMPERATURE_SCENARIO_EVAL=0.3 # 시나리오 평가 시
# 작업별 최대 토큰 수
MAX_TOKENS_EXTRACT=512
MAX_TOKENS_SUMMARIZE=300
MAX_TOKENS_QA_GEN=512
MAX_TOKENS_QA_VERIFY=100
MAX_TOKENS_STANCE=10
MAX_TOKENS_SENTIMENT=10
MAX_TOKENS_OPINION_SUMMARIZE=400
MAX_TOKENS_SYNTHESIS=300
MAX_TOKENS_IDEA=1024
MAX_TOKENS_SCENARIO=2048
MAX_TOKENS_SCENARIO_EVAL=512

# --- 이미지 생성 동작 튜닝 ---
DEFAULT_IMAGE_MODEL=dall-e-3  # 기본 이미지 생성 모델 ID
IMAGE_DEFAULT_STYLE="4-panel comic style, simple illustration, clear lines, vibrant colors"
MAX_IMAGE_PROMPT_LEN=500
IMAGE_HEIGHT=1024
IMAGE_WIDTH=1024
IMAGE_NEGATIVE_PROMPT="text, letters, words, signature, watermark, ugly, deformed, blurry, low quality, multiple panels"
# IMAGE_STYLE_PRESET= # 예: 'cinematic', 'photorealistic' 등 (사용하는 API가 지원 시)
IMAGE_API_RETRIES=3 # LLM 기본값 따름

# --- 번역 동작 튜닝 ---
TARGET_TRANSLATION_LANGUAGE=en # 번역 목표 언어 코드 (예: ko, ja, zh-CN)
# SOURCE_LANGUAGE=            # 번역 소스 언어 코드 (미지정 시 자동 감지 시도)
TRANSLATOR_CONCURRENCY=3

# --- 검색/트렌드 도구 동작 튜닝 ---
Google Search_API_RETRIES=3 # Google Search 전용 재시도
PYTRENDS_TIMEFRAME=today 7-d # Google Trends 조회 기간 (예: 'now 1-d', 'today 3-m')
PYTRENDS_GEO=             # Google Trends 지역 필터 (예: 'US', 'KR', 비워두면 전세계)
PYTRENDS_HL=en-US         # Google Trends 인터페이스 언어
PYTRENDS_BATCH_DELAY_SEC=1.5
TWITTER_COUNTS_DELAY_SEC=0.6
TWITTER_OPINION_MAX_RESULTS=15
REDDIT_USER_AGENT=ComicGeneratorAgent/1.0 # Reddit API 사용 시 User Agent (변경 권장)
REDDIT_TARGET_SUBREDDITS=news,worldnews,technology,science,futurology,korea,AskReddit,datascience,artificial
REDDIT_OPINION_MAX_RESULTS=15
YOUTUBE_OPINION_MAX_RESULTS=25 # 주의: YouTube API 할당량 소모가 클 수 있음
BLOG_OPINION_MAX_RESULTS=10
COMMUNITY_OPINION_MAX_RESULTS=10
TARGET_COMMUNITY_DOMAINS=dcinside.com,clien.net,ruliweb.com,fmkorea.com,theqoo.net,instiz.net,etoland.co.kr,ppomppu.co.kr,82cook.com,quora.com,stackoverflow.com
# PREDEFINED_RSS_FEEDS=http://example.com/rss1.xml,http://sample.org/feed.rss # 쉼표로 구분된 RSS 피드 목록

# --- Redis Cache 동작 튜닝 ---
REDIS_PORT=6379
REDIS_DB=0
TOPIC_ANALYZER_CACHE_TTL=1800 # 초 (30분)

# --- LangSmith 동작 튜닝 ---
LANGCHAIN_PROJECT=ComicGenerator-Project # LangSmith 프로젝트 이름
# LANGCHAIN_ENDPOINT=https://api.smith.langchain.com # LangSmith 엔드포인트 (기본값 사용 시 생략 가능)

# --- 데이터 수집 및 처리 파라미터 ---
SEARCH_RESULT_COUNT=10 # 검색 API에서 요청할 결과 수
TARGET_URLS_PER_KEYWORD=5 # 키워드 당 수집 목표 URL 수
TRUSTED_NEWS_DOMAINS=news.kbs.co.kr,news.sbs.co.kr,yna.co.kr,chosun.com,joongang.co.kr,donga.com,hani.co.kr,khan.co.kr,bbc.com,cnn.com,nytimes.com,reuters.com,apnews.com,bloomberg.com,wsj.com
MAX_ARTICLES_TO_SCRAPE=5 # URL 당 스크랩할 최대 뉴스 기사 수
MAX_TOTAL_OPINIONS_TARGET=60 # 모든 플랫폼에서 수집/처리할 최대 의견 수 목표
# 플랫폼별 의견 수집 목표치 (JSON 형식, 문자열 내 큰따옴표 사용 주의)
MAX_OPINIONS_PER_PLATFORM_SAMPLING={"Twitter": 15, "Reddit": 15, "YouTube": 10, "Blog": 10, "Community": 10}
MIN_OPINIONS_PER_PLATFORM_SAMPLING={"Twitter": 2, "Reddit": 2, "YouTube": 1, "Blog": 2, "Community": 2}
# 스크래핑 동작 튜닝
SCRAPER_USER_AGENT=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36
SCRAPER_HTTP_TIMEOUT=20 # 초
SCRAPER_CONCURRENCY=5 # 뉴스 스크래핑 동시성
OPINION_SCRAPER_CONCURRENCY=3 # 의견 스크래핑 동시성
MIN_EXTRACTED_TEXT_LENGTH=100 # 최소 유효 텍스트 길이
MIN_LANGDETECT_TEXT_LENGTH=50 # 언어 감지 최소 텍스트 길이
# Selenium (동적 스크래핑) 설정
# SELENIUM_GRID_URL=http://localhost:4444/wd/hub # Selenium Grid 사용 시 URL
SELENIUM_HEADLESS=True
SELENIUM_RETRY_ATTEMPTS=2
SELENIUM_RETRY_WAIT_SECONDS=1
# 스크래핑 지연 및 프록시
SCRAPER_MIN_DELAY_MS=1500 # ms
SCRAPER_MAX_DELAY_MS=4000 # ms
SCRAPER_USE_PROXY=false
SCRAPER_ROTATE_UA=false # User Agent 로테이션 사용 여부
# 텍스트 필터링 및 정제 (Node 07)
LANGUAGE_FILTER=en,ko # 허용할 언어 코드 목록 (쉼표 구분)
SPAM_KEYWORDS=buy now,click here,order now,special offer,limited time,discount,free,cheap,amazing,winner,prize,cash,casino,lottery,viagra,pharmacy,subscribe,loan,credit,mortgage,debt,investment,earn money,make money,weight loss,diet,guaranteed,100%,$$$
SPAM_MAX_URL_COUNT=2
SPAM_MAX_UPPERCASE_RATIO=0.5
# 중복 제거 (Simhash)
SIMHASH_THRESHOLD=3
SIMHASH_TOKEN_WIDTH=64
# 군집화 (KMeans/TF-IDF)
KMEANS_DEFAULT_CLUSTERS=5
KMEANS_MIN_SAMPLES=10
TFIDF_MAX_FEATURES=5000
TFIDF_STOP_WORDS=english # 또는 'None'
TFIDF_MIN_DF=2
TFIDF_MAX_DF=0.90
TFIDF_NGRAM_RANGE_MIN=1
TFIDF_NGRAM_RANGE_MAX=2
KMEANS_N_INIT=10
KMEANS_MAX_NO_IMPROVEMENT=20

# --- 평가 및 의사결정 기준 (Nodes 08, 10, 11) ---
FEQA_THRESHOLD=0.5
# 평가 지표별 임계값 (JSON 형식)
EVALUATION_THRESHOLDS={"rouge_l": 0.3, "bert_score": 0.7, "topic_coverage": 0.6}
# 재시도/대체 경로 결정을 위한 임계값 (JSON 형식)
DECISION_LOGIC_THRESHOLDS={"very_low_rouge": 0.1, "very_low_bertscore": 0.5, "very_low_coverage": 0.3, "low_coverage_high_metrics": 0.7}
BERTSCORE_LANG=en # BertScore 계산 시 사용할 언어 모델 (예: 'ko' for Korean)

# --- 요약 및 창의적 작업 튜닝 (Nodes 08-10, 14-16) ---
SUMMARIZER_CONCURRENCY=3

# --- 보고서 및 결과물 생성 설정 (Nodes 13, 16, 19) ---
# 보고서 템플릿 경로 (기본값: PROJECT_ROOT/app/templates)
# TEMPLATE_DIR=
PROGRESS_REPORT_TEMPLATE_A_FILENAME=progress_report_template_a.md.j2
PROGRESS_REPORT_TEMPLATE_B_FILENAME=scenario_report_template_b.md.j2
TRENDS_REPORT_TOP_N=3
# 최종 결과물 (이미지, 만화) 후처리
# 생성된 중간 이미지 저장 경로 (기본값: PROJECT_ROOT/storage/images)
# IMAGE_STORAGE_PATH=
# 텍스트 오버레이용 폰트 경로 (미지정 시 시스템 기본 폰트 사용 시도)
# DEFAULT_FONT_PATH=/path/to/your/font.ttf
# 최종 만화 저장 디렉토리 (기본값: PROJECT_ROOT/final_comics)
# FINAL_COMIC_SAVE_DIR=
FINAL_IMAGE_FORMAT=WEBP # 최종 이미지 저장 포맷 (WEBP, PNG, JPEG 등)
FINAL_IMAGE_WIDTH=1024 # 최종 이미지 너비 (픽셀)
FINAL_IMAGE_QUALITY=85 # 최종 이미지 저장 품질 (JPEG/WEBP, 1-100)
TEXT_OVERLAY_FONT_SIZE_RATIO=20 # 이미지 높이 대비 텍스트 크기 비율
TEXT_OVERLAY_COLOR=black # 텍스트 오버레이 색상
IMAGE_DOWNLOAD_RETRIES=3 # 이미지 다운로드 재시도 횟수
MAX_ALT_TEXT_LEN=300 # 생성할 대체 텍스트 최대 길이

# --- 결과 저장 경로 ---
# 에이전트/노드 결과 및 디버그 정보 저장 기본 경로 (기본값: PROJECT_ROOT/results)
# RESULTS_DIR=

# --- InitializeNode 에서 참조되었던 추가 설정 (필요시 settings.py 에 정의) ---
# MAX_ARTICLE_TEXT_LEN=10000 # 기사 본문 최대 길이 제한 (예시)
# MAX_OPINION_TEXT_LEN=2000  # 의견 텍스트 최대 길이 제한 (예시)
# MAX_CONTEXT_LEN_SCENARIO=4000 # 시나리오 생성 시 컨텍스트 최대 길이 (예시)
# ENABLE_SCENARIO_EVALUATION=True # 시나리오 자동 평가 기능 활성화 여부 (예시)
# HTTP_TIMEOUT=30 # aiohttp 등 일반 비동기 HTTP 클라이언트 타임아웃 (예시)